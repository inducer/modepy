OUTDIR?=latex.out
TEXMK?=latexmk -verbose -pdflua -output-directory=$(OUTDIR)

INARA_PATH := .inara
TARGET_FOLDER := $$(pwd)/publishing-artifacts

JOURNAL := joss
INARA_DATA_PATH := $(INARA_PATH)/data
OPENJOURNALS_PATH := $(INARA_PATH)/resources
ARTICLE_INFO_FILE = $(OPENJOURNALS_PATH)/default-article-info.yaml

all: paper
.PHONY: all

help: 			## Show this help
	@echo -e "\nSpecify a command. The choices are:\n"
	@grep -E '^[0-9a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[0;36m%-12s\033[m %s\n", $$1, $$2}'
	@echo ""
.PHONY: help

%.pdf: %.tex
	PYTHONWARNINGS=ignore $(TEXMK) $<
	@cp $(OUTDIR)/$@ .

paper: paper.md paper.bib		## Compile paper to PDF using JOSS tools
	mkdir -p $(TARGET_FOLDER)
	make -C $(INARA_PATH) -B resources/footer.csl
	INARA_ARTIFACTS_PATH=$(TARGET_FOLDER)/ pandoc \
	  --data-dir=$(INARA_DATA_PATH) \
	  --defaults=$(INARA_DATA_PATH)/defaults/shared.yaml \
	  --defaults=$(INARA_DATA_PATH)/defaults/pdf.yaml \
	  --defaults=$(OPENJOURNALS_PATH)/$(JOURNAL)/defaults.yaml \
	  --resource-path=$$(pwd):$(OPENJOURNALS_PATH) \
	  --metadata=article-info-file=$(ARTICLE_INFO_FILE) \
	  --variable=$(JOURNAL) \
	  --output=$@.tex \
	  $<
	make paper.pdf
.PHONY: paper

inara:							## Download JOSS tools (inara) for compilation
	@if [ ! -d "$(INARA_PATH)" ]; then \
		git clone git@github.com:openjournals/inara.git $(INARA_PATH); \
	else \
		cd $(INARA_PATH) && git pull origin main; \
	fi
	mkdir -p joss
	cp $(INARA_PATH)/resources/joss/logo.png joss/logo.png
.PHONY: inara

tidy: paper.bib			## Clean up bibliography (with bibtex-tidy)
	@bibtex-tidy \
		--modify \
		--sort \
		--sort-fields \
		--drop-all-caps \
		--merge last \
		--numeric \
		--strip-enclosing-braces \
		--trailing-commas \
		--blank-lines \
		--remove-empty-fields \
		--remove-dupe-fields \
		--wrap \
		$<
.PHONY: tidy

clean:						## Remove temporary files generated by JOSS tools
	rm -rf $(TARGET_FOLDER)
	rm -rf $(OUTDIR)
.PHONY: clean

purge: clean
	rm -rf paper.pdf
	rm -rf .inara
.PHONY: purge

